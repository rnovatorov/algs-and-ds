from src.ds.skip_list import SkipList


class TestSkipList:

    def test_leet_1(self) -> None:
        actions = [
            "Skiplist",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "search",
            "add",
            "erase",
            "search",
            "erase",
            "search",
            "erase",
            "erase",
            "erase",
            "add",
            "erase",
            "add",
            "search",
            "erase",
            "search",
            "add",
            "erase",
            "erase",
            "erase",
            "add",
            "erase",
            "erase",
            "add",
            "erase",
            "add",
            "erase",
            "search",
            "erase",
            "search",
            "search",
            "erase",
            "search",
            "search",
            "add",
            "erase",
            "search",
            "search",
            "erase",
            "search",
            "add",
            "add",
            "search",
            "erase",
            "search",
            "search",
            "search",
            "add",
            "search",
            "add",
            "add",
            "add",
            "add",
            "search",
            "erase",
            "add",
            "search",
            "add",
            "search",
            "erase",
            "add",
            "add",
            "add",
            "erase",
            "search",
            "search",
            "search",
            "add",
            "add",
            "erase",
            "add",
            "erase",
            "add",
            "search",
            "add",
            "search",
            "search",
            "search",
            "search",
            "erase",
            "add",
            "erase",
            "search",
            "search",
            "search",
            "search",
            "erase",
            "search",
            "erase",
            "add",
            "add",
            "add",
            "search",
            "erase",
            "search",
            "search",
            "add",
            "add",
            "erase",
            "add",
            "erase",
            "search",
            "erase",
            "search",
            "erase",
            "add",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
        ]
        arguments = [
            [],
            [22],
            [25],
            [0],
            [11],
            [8],
            [1],
            [22],
            [3],
            [26],
            [15],
            [14],
            [3],
            [28],
            [17],
            [26],
            [21],
            [20],
            [11],
            [2],
            [17],
            [14],
            [9],
            [24],
            [13],
            [10],
            [29],
            [4],
            [25],
            [28],
            [7],
            [8],
            [29],
            [2],
            [9],
            [0],
            [23],
            [2],
            [3],
            [6],
            [9],
            [26],
            [1],
            [18],
            [13],
            [0],
            [15],
            [18],
            [7],
            [2],
            [9],
            [22],
            [1],
            [12],
            [13],
            [12],
            [15],
            [4],
            [19],
            [14],
            [21],
            [6],
            [3],
            [8],
            [1],
            [24],
            [1],
            [26],
            [27],
            [0],
            [21],
            [16],
            [27],
            [22],
            [23],
            [28],
            [5],
            [2],
            [9],
            [16],
            [1],
            [16],
            [23],
            [8],
            [5],
            [6],
            [19],
            [6],
            [27],
            [0],
            [21],
            [26],
            [5],
            [14],
            [25],
            [24],
            [21],
            [4],
            [21],
            [28],
            [25],
            [28],
            [23],
            [8],
            [27],
            [24],
            [1],
            [8],
            [17],
            [4],
            [21],
            [4],
            [19],
            [8],
            [23],
            [4],
            [11],
            [22],
            [25],
            [6],
            [9],
            [28],
            [11],
            [8],
            [25],
            [6],
            [5],
            [18],
            [29],
            [20],
            [15],
            [2],
            [3],
            [26],
            [15],
            [6],
        ]
        expected_results = [
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            False,
            None,
            True,
            False,
            True,
            True,
            False,
            False,
            False,
            None,
            False,
            None,
            True,
            True,
            False,
            None,
            False,
            False,
            False,
            None,
            False,
            False,
            None,
            False,
            None,
            True,
            True,
            False,
            False,
            True,
            True,
            False,
            False,
            None,
            True,
            True,
            True,
            False,
            False,
            None,
            None,
            True,
            False,
            True,
            False,
            False,
            None,
            True,
            None,
            None,
            None,
            None,
            False,
            True,
            None,
            False,
            None,
            True,
            False,
            None,
            None,
            None,
            False,
            False,
            True,
            False,
            None,
            None,
            True,
            None,
            False,
            None,
            True,
            None,
            True,
            True,
            False,
            True,
            True,
            None,
            True,
            True,
            False,
            True,
            False,
            True,
            True,
            True,
            None,
            None,
            None,
            True,
            False,
            True,
            False,
            None,
            None,
            True,
            None,
            True,
            False,
            True,
            False,
            True,
            None,
            False,
            False,
            True,
            False,
            True,
            False,
            False,
            False,
            True,
            True,
            True,
            True,
            True,
            True,
            True,
        ]
        for action, argument, expected_result in zip(
            actions, arguments, expected_results
        ):
            match action:
                case "Skiplist":
                    skip_list = SkipList()
                    assert expected_result is None
                case "add":
                    skip_list.insert(*argument)
                    assert expected_result is None
                case "search":
                    value = skip_list.search(*argument)
                    assert value == expected_result
                case "erase":
                    value = skip_list.delete(*argument)
                    assert value == expected_result
                case _:
                    raise NotImplementedError(action)

    def test_leet_2(self) -> None:
        actions = [
            "Skiplist",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "add",
            "search",
            "add",
            "search",
            "add",
            "search",
            "add",
            "add",
            "search",
            "search",
            "erase",
            "search",
            "erase",
            "erase",
            "erase",
            "erase",
            "erase",
            "erase",
            "erase",
            "add",
            "erase",
            "erase",
            "erase",
            "search",
            "erase",
            "add",
            "erase",
            "erase",
            "erase",
            "add",
            "erase",
            "search",
            "erase",
            "erase",
            "add",
            "search",
            "add",
            "erase",
            "add",
            "erase",
            "add",
            "erase",
            "erase",
            "search",
            "add",
            "search",
            "erase",
            "erase",
            "erase",
            "add",
            "erase",
            "erase",
            "search",
            "add",
            "erase",
            "search",
            "search",
            "erase",
            "add",
            "add",
            "add",
            "search",
            "search",
            "search",
            "erase",
            "erase",
            "erase",
            "add",
            "search",
            "add",
            "search",
            "erase",
            "erase",
            "search",
            "erase",
            "add",
            "search",
            "add",
            "add",
            "erase",
            "search",
            "erase",
            "erase",
            "search",
            "erase",
            "add",
            "erase",
            "add",
            "erase",
            "erase",
            "erase",
            "search",
            "search",
            "search",
            "search",
            "erase",
            "search",
            "search",
            "search",
            "search",
            "add",
            "search",
            "add",
            "add",
            "add",
            "add",
            "add",
            "search",
            "add",
            "search",
            "erase",
            "search",
            "add",
            "add",
            "search",
            "add",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
        ]
        arguments = [
            [],
            [10],
            [13],
            [2],
            [13],
            [0],
            [37],
            [0],
            [3],
            [16],
            [25],
            [32],
            [27],
            [18],
            [1],
            [6],
            [5],
            [10],
            [41],
            [10],
            [33],
            [14],
            [33],
            [2],
            [5],
            [18],
            [33],
            [38],
            [13],
            [16],
            [11],
            [38],
            [33],
            [34],
            [11],
            [0],
            [33],
            [22],
            [15],
            [30],
            [39],
            [34],
            [3],
            [20],
            [5],
            [24],
            [35],
            [0],
            [3],
            [42],
            [41],
            [2],
            [21],
            [26],
            [41],
            [20],
            [25],
            [30],
            [43],
            [2],
            [39],
            [16],
            [21],
            [34],
            [37],
            [24],
            [23],
            [32],
            [11],
            [32],
            [23],
            [22],
            [19],
            [28],
            [21],
            [18],
            [27],
            [20],
            [19],
            [22],
            [33],
            [44],
            [27],
            [20],
            [1],
            [12],
            [37],
            [36],
            [23],
            [32],
            [19],
            [14],
            [43],
            [22],
            [33],
            [26],
            [45],
            [40],
            [15],
            [28],
            [31],
            [26],
            [3],
            [4],
            [21],
            [10],
            [27],
            [14],
            [17],
            [4],
            [5],
            [26],
            [25],
            [32],
            [41],
            [20],
            [37],
            [8],
            [13],
            [34],
            [19],
            [0],
            [39],
            [18],
            [19],
            [14],
            [31],
            [4],
            [5],
            [28],
            [37],
            [4],
            [17],
            [8],
            [13],
            [0],
            [21],
            [42],
            [7],
            [34],
            [7],
            [28],
            [7],
            [2],
            [33],
            [34],
            [45],
            [22],
            [25],
            [34],
            [45],
            [28],
            [43],
            [20],
            [45],
            [20],
            [19],
            [16],
            [11],
            [38],
            [25],
            [0],
        ]
        expected_results = [
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            True,
            None,
            True,
            None,
            True,
            None,
            None,
            True,
            True,
            False,
            True,
            True,
            True,
            False,
            False,
            False,
            False,
            False,
            None,
            False,
            True,
            False,
            False,
            True,
            None,
            False,
            True,
            True,
            None,
            False,
            False,
            False,
            True,
            None,
            False,
            None,
            False,
            None,
            True,
            None,
            True,
            False,
            False,
            None,
            True,
            True,
            False,
            False,
            None,
            False,
            False,
            True,
            None,
            False,
            True,
            False,
            True,
            None,
            None,
            None,
            True,
            False,
            False,
            False,
            False,
            True,
            None,
            True,
            None,
            False,
            False,
            False,
            False,
            False,
            None,
            False,
            None,
            None,
            True,
            False,
            False,
            True,
            True,
            True,
            None,
            False,
            None,
            True,
            False,
            False,
            False,
            True,
            False,
            False,
            True,
            True,
            True,
            False,
            False,
            None,
            True,
            None,
            None,
            None,
            None,
            None,
            False,
            None,
            True,
            False,
            True,
            None,
            None,
            False,
            None,
            True,
            True,
            True,
            True,
            True,
            False,
            True,
            False,
            False,
            False,
            True,
            False,
            True,
            True,
            True,
            False,
            True,
            True,
            True,
            True,
            True,
            False,
            True,
        ]
        for i, (action, argument, expected_result) in enumerate(
            zip(actions, arguments, expected_results)
        ):
            print(i, action, *argument)
            match action:
                case "Skiplist":
                    skip_list = SkipList()
                    assert expected_result is None, i
                case "add":
                    skip_list.insert(*argument)
                    assert expected_result is None, i
                case "search":
                    value = skip_list.search(*argument)
                    assert value == expected_result, i
                case "erase":
                    value = skip_list.delete(*argument)
                    assert value == expected_result, i
                case _:
                    raise NotImplementedError(action)
            # print(i, skip_list.values_by_layer)
